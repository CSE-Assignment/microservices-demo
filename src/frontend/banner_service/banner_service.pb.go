// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.1
// source: banner_service.proto

package bannerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for getting the current banner.
type GetCurrentBannerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Location      string                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentBannerRequest) Reset() {
	*x = GetCurrentBannerRequest{}
	mi := &file_banner_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentBannerRequest) ProtoMessage() {}

func (x *GetCurrentBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banner_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentBannerRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentBannerRequest) Descriptor() ([]byte, []int) {
	return file_banner_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetCurrentBannerRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// Response message containing the banner configuration and image data.
type GetCurrentBannerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image         []byte                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	ImageFormat   string                 `protobuf:"bytes,4,opt,name=image_format,json=imageFormat,proto3" json:"image_format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentBannerResponse) Reset() {
	*x = GetCurrentBannerResponse{}
	mi := &file_banner_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentBannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentBannerResponse) ProtoMessage() {}

func (x *GetCurrentBannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banner_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentBannerResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentBannerResponse) Descriptor() ([]byte, []int) {
	return file_banner_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCurrentBannerResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetCurrentBannerResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetCurrentBannerResponse) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *GetCurrentBannerResponse) GetImageFormat() string {
	if x != nil {
		return x.ImageFormat
	}
	return ""
}

var File_banner_service_proto protoreflect.FileDescriptor

var file_banner_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x35,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x32, 0x66, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x73,
	0x72, 0x63, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_banner_service_proto_rawDescOnce sync.Once
	file_banner_service_proto_rawDescData = file_banner_service_proto_rawDesc
)

func file_banner_service_proto_rawDescGZIP() []byte {
	file_banner_service_proto_rawDescOnce.Do(func() {
		file_banner_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_banner_service_proto_rawDescData)
	})
	return file_banner_service_proto_rawDescData
}

var file_banner_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_banner_service_proto_goTypes = []any{
	(*GetCurrentBannerRequest)(nil),  // 0: banner.GetCurrentBannerRequest
	(*GetCurrentBannerResponse)(nil), // 1: banner.GetCurrentBannerResponse
}
var file_banner_service_proto_depIdxs = []int32{
	0, // 0: banner.BannerService.GetCurrentBanner:input_type -> banner.GetCurrentBannerRequest
	1, // 1: banner.BannerService.GetCurrentBanner:output_type -> banner.GetCurrentBannerResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_banner_service_proto_init() }
func file_banner_service_proto_init() {
	if File_banner_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_banner_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_banner_service_proto_goTypes,
		DependencyIndexes: file_banner_service_proto_depIdxs,
		MessageInfos:      file_banner_service_proto_msgTypes,
	}.Build()
	File_banner_service_proto = out.File
	file_banner_service_proto_rawDesc = nil
	file_banner_service_proto_goTypes = nil
	file_banner_service_proto_depIdxs = nil
}
